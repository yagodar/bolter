/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.yagodar.bolter.view;

import com.yagodar.bolter.model.BolterModel;
import com.yagodar.bolter.model.rep.BolterModelPreferencesRepository;
import com.yagodar.bolter.model.sew.AWebSearchEngineWrapper;
import java.awt.Component;
import java.awt.Container;
import java.awt.Desktop;
import java.awt.FocusTraversalPolicy;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.prefs.Preferences;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author profselection-left
 */
public class BolterFrame extends javax.swing.JFrame {

    /**
     * Creates new form BolterFrame
     *
     * @param bolterModel
     */
    public BolterFrame(BolterModel bolterModel) {
        initComponents();

        initModalDialogs();
        
        initPreferences();
        
        initModel(bolterModel);

        initValues();

        initBehavior();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelApp = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelSearchFilter = new javax.swing.JPanel();
        jPanelSearchFilterSites = new javax.swing.JPanel();
        jTextFieldLastAtSite = new javax.swing.JTextField();
        jButtonAddAtSite = new javax.swing.JButton();
        jButtonDelAtSite = new javax.swing.JButton();
        jButtonDelAllAtSites = new javax.swing.JButton();
        jScrollPaneListAtSites = new javax.swing.JScrollPane();
        jListAtSites = new javax.swing.JList<String>();
        jLabel1 = new javax.swing.JLabel();
        jPanelSearchFilterDate = new javax.swing.JPanel();
        jLabelDateFrom = new javax.swing.JLabel();
        jLabelDateTo = new javax.swing.JLabel();
        jFormattedTextFieldDateFrom = new javax.swing.JFormattedTextField();
        jFormattedTextFieldDateTo = new javax.swing.JFormattedTextField();
        jButtonDelDates = new javax.swing.JButton();
        jButtonDelDateFrom = new javax.swing.JButton();
        jButtonDelDateTo = new javax.swing.JButton();
        jPanelSearchFilterEngine = new javax.swing.JPanel();
        jScrollPaneWebSearchEngineWrappers = new javax.swing.JScrollPane();
        jListWebSearchEngineWrappers = new javax.swing.JList<AWebSearchEngineWrapper>();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuFileItemExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuHelpItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Bolter");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicy(new BolterFocusTraversalPolicy());
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/icon.png")));
        setMinimumSize(new java.awt.Dimension(780, 550));
        setName("bolterFrame"); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabelApp.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        jLabelApp.setText("Bolter");

        jTextFieldSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldSearch.setUI(new HintTextFieldUI("Поиск..."));
        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(563, 28));
        jTextFieldSearch.setName(""); // NOI18N
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(563, 28));
        jTextFieldSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSearchFocusLost(evt);
            }
        });
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        jButtonSearch.setFont(new java.awt.Font("Tahoma", 1, 19)); // NOI18N
        jButtonSearch.setText("bolt");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jPanelSearchFilter.setMinimumSize(new java.awt.Dimension(730, 420));
        jPanelSearchFilter.setName(""); // NOI18N
        jPanelSearchFilter.setPreferredSize(new java.awt.Dimension(730, 420));

        jPanelSearchFilterSites.setBorder(javax.swing.BorderFactory.createTitledBorder("Искать на сайтах"));
        jPanelSearchFilterSites.setMinimumSize(new java.awt.Dimension(520, 420));
        jPanelSearchFilterSites.setRequestFocusEnabled(false);

        jTextFieldLastAtSite.setUI(new HintTextFieldUI("URL адрес..."));
        jTextFieldLastAtSite.setMinimumSize(new java.awt.Dimension(488, 20));
        jTextFieldLastAtSite.setPreferredSize(new java.awt.Dimension(488, 20));
        jTextFieldLastAtSite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldLastAtSiteFocusLost(evt);
            }
        });
        jTextFieldLastAtSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLastAtSiteActionPerformed(evt);
            }
        });

        jButtonAddAtSite.setText("Добавить");
        jButtonAddAtSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAtSiteActionPerformed(evt);
            }
        });

        jButtonDelAtSite.setText("Удалить");
        jButtonDelAtSite.setToolTipText("");
        jButtonDelAtSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelAtSiteActionPerformed(evt);
            }
        });

        jButtonDelAllAtSites.setText("Удалить все");
        jButtonDelAllAtSites.setToolTipText("");
        jButtonDelAllAtSites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelAllAtSitesActionPerformed(evt);
            }
        });

        jScrollPaneListAtSites.setMinimumSize(new java.awt.Dimension(488, 320));
        jScrollPaneListAtSites.setPreferredSize(new java.awt.Dimension(488, 320));

        jListAtSites.setModel(new DefaultListModel<String>());
        jListAtSites.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListAtSitesValueChanged(evt);
            }
        });
        jScrollPaneListAtSites.setViewportView(jListAtSites);

        jLabel1.setText("<html>\n<body>\nЧтобы <b>выделить / снять выделение</b> нескольких сайтов, зажмите <b>Ctrl</b> или <b>Shift</b>\n</body>\n</html>");

        javax.swing.GroupLayout jPanelSearchFilterSitesLayout = new javax.swing.GroupLayout(jPanelSearchFilterSites);
        jPanelSearchFilterSites.setLayout(jPanelSearchFilterSitesLayout);
        jPanelSearchFilterSitesLayout.setHorizontalGroup(
            jPanelSearchFilterSitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterSitesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchFilterSitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneListAtSites, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldLastAtSite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelSearchFilterSitesLayout.createSequentialGroup()
                        .addGroup(jPanelSearchFilterSitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelSearchFilterSitesLayout.createSequentialGroup()
                                .addComponent(jButtonAddAtSite)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDelAtSite)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDelAllAtSites))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelSearchFilterSitesLayout.setVerticalGroup(
            jPanelSearchFilterSitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchFilterSitesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldLastAtSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSearchFilterSitesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddAtSite)
                    .addComponent(jButtonDelAtSite)
                    .addComponent(jButtonDelAllAtSites))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneListAtSites, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelSearchFilterDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Период"));
        jPanelSearchFilterDate.setMinimumSize(new java.awt.Dimension(194, 102));
        jPanelSearchFilterDate.setPreferredSize(new java.awt.Dimension(194, 102));

        jLabelDateFrom.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelDateFrom.setText("с");

        jLabelDateTo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelDateTo.setText("по");

        jFormattedTextFieldDateFrom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jFormattedTextFieldDateFrom.setUI(new HintTextFieldUI("ДД.ММ.ГГГГ"));
        jFormattedTextFieldDateFrom.setMinimumSize(new java.awt.Dimension(125, 20));
        jFormattedTextFieldDateFrom.setName(""); // NOI18N
        jFormattedTextFieldDateFrom.setPreferredSize(new java.awt.Dimension(125, 20));
        jFormattedTextFieldDateFrom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldDateFromFocusLost(evt);
            }
        });
        jFormattedTextFieldDateFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldDateFromActionPerformed(evt);
            }
        });

        jFormattedTextFieldDateTo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jFormattedTextFieldDateTo.setUI(new HintTextFieldUI("ДД.ММ.ГГГГ"));
        jFormattedTextFieldDateTo.setMinimumSize(new java.awt.Dimension(125, 20));
        jFormattedTextFieldDateTo.setName(""); // NOI18N
        jFormattedTextFieldDateTo.setPreferredSize(new java.awt.Dimension(125, 20));
        jFormattedTextFieldDateTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldDateToFocusLost(evt);
            }
        });
        jFormattedTextFieldDateTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldDateToActionPerformed(evt);
            }
        });

        jButtonDelDates.setText("Очистить");
        jButtonDelDates.setMaximumSize(new java.awt.Dimension(90, 23));
        jButtonDelDates.setMinimumSize(new java.awt.Dimension(90, 23));
        jButtonDelDates.setPreferredSize(new java.awt.Dimension(90, 23));
        jButtonDelDates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelDatesActionPerformed(evt);
            }
        });

        jButtonDelDateFrom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete-icon-small.png"))); // NOI18N
        jButtonDelDateFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelDateFromActionPerformed(evt);
            }
        });

        jButtonDelDateTo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete-icon-small.png"))); // NOI18N
        jButtonDelDateTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelDateToActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchFilterDateLayout = new javax.swing.GroupLayout(jPanelSearchFilterDate);
        jPanelSearchFilterDate.setLayout(jPanelSearchFilterDateLayout);
        jPanelSearchFilterDateLayout.setHorizontalGroup(
            jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelDateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jFormattedTextFieldDateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jFormattedTextFieldDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDelDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelDateTo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchFilterDateLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jButtonDelDates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelSearchFilterDateLayout.setVerticalGroup(
            jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterDateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelSearchFilterDateLayout.createSequentialGroup()
                        .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDelDateFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelDateFrom)
                                .addComponent(jFormattedTextFieldDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelSearchFilterDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDateTo)
                            .addComponent(jFormattedTextFieldDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonDelDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDelDates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelSearchFilterEngine.setBorder(javax.swing.BorderFactory.createTitledBorder("Искать с помощью"));

        jListWebSearchEngineWrappers.setModel(new DefaultListModel<AWebSearchEngineWrapper>());
        jListWebSearchEngineWrappers.setName(""); // NOI18N
        jListWebSearchEngineWrappers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListWebSearchEngineWrappersValueChanged(evt);
            }
        });
        jScrollPaneWebSearchEngineWrappers.setViewportView(jListWebSearchEngineWrappers);

        javax.swing.GroupLayout jPanelSearchFilterEngineLayout = new javax.swing.GroupLayout(jPanelSearchFilterEngine);
        jPanelSearchFilterEngine.setLayout(jPanelSearchFilterEngineLayout);
        jPanelSearchFilterEngineLayout.setHorizontalGroup(
            jPanelSearchFilterEngineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterEngineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneWebSearchEngineWrappers, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelSearchFilterEngineLayout.setVerticalGroup(
            jPanelSearchFilterEngineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterEngineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneWebSearchEngineWrappers, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/728x90.jpg"))); // NOI18N
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanelSearchFilterLayout = new javax.swing.GroupLayout(jPanelSearchFilter);
        jPanelSearchFilter.setLayout(jPanelSearchFilterLayout);
        jPanelSearchFilterLayout.setHorizontalGroup(
            jPanelSearchFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterLayout.createSequentialGroup()
                .addComponent(jPanelSearchFilterSites, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSearchFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelSearchFilterDate, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(jPanelSearchFilterEngine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchFilterLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelSearchFilterLayout.setVerticalGroup(
            jPanelSearchFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchFilterLayout.createSequentialGroup()
                .addGroup(jPanelSearchFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSearchFilterLayout.createSequentialGroup()
                        .addComponent(jPanelSearchFilterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelSearchFilterEngine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelSearchFilterSites, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(11, 11, 11)
                .addComponent(jLabel2))
        );

        jMenuBar.setMinimumSize(new java.awt.Dimension(92, 21));

        jMenuFile.setText("Файл");

        jMenuFileItemExit.setText("Выход");
        jMenuFileItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuFileItemExit);

        jMenuBar.add(jMenuFile);

        jMenuHelp.setText("Справка");

        jMenuHelpItemAbout.setText("О программе");
        jMenuHelpItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuHelpItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuHelpItemAbout);

        jMenuBar.add(jMenuHelp);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelSearchFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelApp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSearch)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelApp)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelSearchFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initModalDialogs() {
        aboutDialog = new AboutDialog(this);
    }
    
    private void initPreferences() {
        prefNode = Preferences.userNodeForPackage(getClass());

        frameNormalX = prefNode.getInt(FRAME_X_MARK, getX());
        frameNormalY = prefNode.getInt(FRAME_Y_MARK, getY());
        frameNormalWidth = prefNode.getInt(FRAME_WIDTH_MARK, getWidth());
        frameNormalHeight = prefNode.getInt(FRAME_HEIGHT_MARK, getHeight());
        setBounds(frameNormalX, frameNormalY, frameNormalWidth, frameNormalHeight);

        setExtendedState(prefNode.getInt(FRAME_EXTENDED_STATE_MARK, getExtendedState()));
    }

    private void initModel(BolterModel bolterModel) {
        this.bolterModel = bolterModel;
    }

    private void initBehavior() {
        setEnabledAddAtSitesButton();
        jTextFieldLastAtSite.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                setEnabledAddAtSitesButton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setEnabledAddAtSitesButton();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });

        setEnabledDelAtSitesButtons();

        setEnabledDelDateFromButton();

        setEnabledDelDateToButton();

        jButtonSearch.requestFocus();
    }

    private void initValues() {
        isInitValuesMode = true;

        jTextFieldSearch.setText(bolterModel.getSearchWord());

        jTextFieldLastAtSite.setText(bolterModel.getLastAtSite());

        DefaultListModel<String> listAtSitesModel = (DefaultListModel<String>) jListAtSites.getModel();
        for (String atSiteUrlStr : bolterModel.getAtSiteUrlStrs()) {
            listAtSitesModel.addElement(atSiteUrlStr);
            if (bolterModel.isUsedAtSiteUrlStr(atSiteUrlStr)) {
                jListAtSites.addSelectionInterval(listAtSitesModel.getSize() - 1, listAtSitesModel.getSize() - 1);
            }
        }

        Date date = bolterModel.getDateFrom();
        if (date != null) {
            jFormattedTextFieldDateFrom.setText(SEARCH_DATE_FORMAT.format(date));
        }

        date = bolterModel.getDateTo();
        if (date != null) {
            jFormattedTextFieldDateTo.setText(SEARCH_DATE_FORMAT.format(date));
        }

        DefaultListModel<AWebSearchEngineWrapper> listWebSearchEngineWrappersModel = (DefaultListModel<AWebSearchEngineWrapper>) jListWebSearchEngineWrappers.getModel();
        for (AWebSearchEngineWrapper webSearchEngineWrapper : bolterModel.getWebSearchEngineWrappers()) {
            listWebSearchEngineWrappersModel.addElement(webSearchEngineWrapper);
            if (bolterModel.isUsedWebSearchEngineWrapper(webSearchEngineWrapper.getMark())) {
                jListWebSearchEngineWrappers.addSelectionInterval(listWebSearchEngineWrappersModel.getSize() - 1, listWebSearchEngineWrappersModel.getSize() - 1);
            }
        }

        isInitValuesMode = false;
    }

    private void jButtonDelAllAtSitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelAllAtSitesActionPerformed
        if (JOptionPane.showConfirmDialog(this, DEL_ALL_AT_SITES_MESSAGE, DEL_ALL_AT_SITES_TITLE, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
            ((DefaultListModel<String>) jListAtSites.getModel()).removeAllElements();
        }
    }//GEN-LAST:event_jButtonDelAllAtSitesActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        String searchWord = bolterModel.getSearchWord();
        if (searchWord != null && !searchWord.isEmpty()) {
            try {
                for (AWebSearchEngineWrapper wrapper : bolterModel.getUsedWebSearchEngineWrappers()) {
                    Desktop.getDesktop().browse(new URI(wrapper.genSearchQuery(searchWord, bolterModel.getUsedAtSiteUrlStrs(), bolterModel.getDateFrom(), bolterModel.getDateTo())));
                }
            } catch (IOException | URISyntaxException ex) {
            }
        } else {
            JOptionPane.showMessageDialog(this, SEARCH_UNAVAILABLE_MESSAGE, SEARCH_UNAVAILABLE_TITLE, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSearchFocusLost
        if (!isInitValuesMode) {
            bolterModel.setSearchWord(jTextFieldSearch.getText());
        }
    }//GEN-LAST:event_jTextFieldSearchFocusLost

    private void jTextFieldLastAtSiteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldLastAtSiteFocusLost
        if (!isInitValuesMode) {
            bolterModel.setLastAtSite(jTextFieldLastAtSite.getText());
        }
    }//GEN-LAST:event_jTextFieldLastAtSiteFocusLost

    private void jButtonAddAtSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddAtSiteActionPerformed
        String newAtSiteUrlStr = jTextFieldLastAtSite.getText();

        if (newAtSiteUrlStr != null && !newAtSiteUrlStr.isEmpty()) {
            DefaultListModel<String> listAtSitesModel = (DefaultListModel<String>) jListAtSites.getModel();

            if (!listAtSitesModel.contains(newAtSiteUrlStr)) {
                listAtSitesModel.addElement(newAtSiteUrlStr);
                jListAtSites.addSelectionInterval(listAtSitesModel.getSize() - 1, listAtSitesModel.getSize() - 1);
            } else {

            }
        }
    }//GEN-LAST:event_jButtonAddAtSiteActionPerformed

    private void jListAtSitesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListAtSitesValueChanged
        if (!isInitValuesMode) {
            DefaultListModel<String> listAtSitesModel = (DefaultListModel<String>) jListAtSites.getModel();

            setEnabledDelAtSitesButtons();

            bolterModel.clearAtSiteUrlStr();

            Enumeration<String> en = listAtSitesModel.elements();
            while (en.hasMoreElements()) {
                String atSiteUrlStr = en.nextElement();
                bolterModel.putUsedAtSiteUrlStr(atSiteUrlStr, jListAtSites.getSelectedValuesList().contains(atSiteUrlStr));
            }
        }
    }//GEN-LAST:event_jListAtSitesValueChanged

    private void jButtonDelAtSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelAtSiteActionPerformed
        String delAtSitesCurMessage = DEL_AT_SITES_MESSAGE;

        DefaultListModel<String> listAtSitesModel = (DefaultListModel<String>) jListAtSites.getModel();
        for (String atSiteUrlStr : jListAtSites.getSelectedValuesList()) {
            delAtSitesCurMessage += atSiteUrlStr + NEXT_LINE_SMB;
        }

        delAtSitesCurMessage += NEXT_LINE_SMB;

        if (JOptionPane.showConfirmDialog(this, delAtSitesCurMessage, DEL_AT_SITES_TITLE, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
            for (String atSiteUrlStr : jListAtSites.getSelectedValuesList()) {
                listAtSitesModel.removeElement(atSiteUrlStr);
            }
        }
    }//GEN-LAST:event_jButtonDelAtSiteActionPerformed

    private void jFormattedTextFieldDateFromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDateFromFocusLost
        if (!isInitValuesMode) {
            try {
                bolterModel.setDateFrom(SEARCH_DATE_FORMAT.parse(jFormattedTextFieldDateFrom.getText()));
                setEnabledDelDateFromButton();
            } catch (ParseException ex) {
                bolterModel.setDateFrom(null);
            }
        }
    }//GEN-LAST:event_jFormattedTextFieldDateFromFocusLost

    private void jFormattedTextFieldDateToFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDateToFocusLost
        if (!isInitValuesMode) {
            try {
                bolterModel.setDateTo(SEARCH_DATE_FORMAT.parse(jFormattedTextFieldDateTo.getText()));
                setEnabledDelDateToButton();
            } catch (ParseException ex) {
                bolterModel.setDateTo(null);
            }
        }
    }//GEN-LAST:event_jFormattedTextFieldDateToFocusLost

    private void jButtonDelDateFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelDateFromActionPerformed
        jFormattedTextFieldDateFrom.setValue(null);
        bolterModel.setDateFrom(null);
        setEnabledDelDateFromButton();
    }//GEN-LAST:event_jButtonDelDateFromActionPerformed

    private void jButtonDelDateToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelDateToActionPerformed
        jFormattedTextFieldDateTo.setValue(null);
        bolterModel.setDateTo(null);
        setEnabledDelDateToButton();
    }//GEN-LAST:event_jButtonDelDateToActionPerformed

    private void jButtonDelDatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelDatesActionPerformed
        if (JOptionPane.showConfirmDialog(this, DEL_DATES_MESSAGE, DEL_DATES_TITLE, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
            jButtonDelDateFromActionPerformed(null);
            jButtonDelDateToActionPerformed(null);
        }
    }//GEN-LAST:event_jButtonDelDatesActionPerformed

    private void jListWebSearchEngineWrappersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListWebSearchEngineWrappersValueChanged
        if (!isInitValuesMode) {
            for (AWebSearchEngineWrapper webSearchEngineWrapper : bolterModel.getWebSearchEngineWrappers()) {
                bolterModel.putUsedWebSearchEngineWrapperMark(webSearchEngineWrapper.getMark(), jListWebSearchEngineWrappers.getSelectedValuesList().contains(webSearchEngineWrapper));
            }
        }
    }//GEN-LAST:event_jListWebSearchEngineWrappersValueChanged

    private void jFormattedTextFieldDateFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDateFromActionPerformed
        jFormattedTextFieldDateTo.requestFocus();
    }//GEN-LAST:event_jFormattedTextFieldDateFromActionPerformed

    private void jFormattedTextFieldDateToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDateToActionPerformed
        jListWebSearchEngineWrappers.requestFocus();
    }//GEN-LAST:event_jFormattedTextFieldDateToActionPerformed

    private void jTextFieldLastAtSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLastAtSiteActionPerformed
        jButtonAddAtSiteActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldLastAtSiteActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        jTextFieldSearchFocusLost(null);
        jButtonSearchActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        jMenuFileItemExitActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void jMenuFileItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileItemExitActionPerformed
        if (JOptionPane.showConfirmDialog(this, DEL_EXIT_MESSAGE, DEL_EXIT_TITLE, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
            jTextFieldSearchFocusLost(null);
            jTextFieldLastAtSiteFocusLost(null);
            jFormattedTextFieldDateFromFocusLost(null);
            jFormattedTextFieldDateToFocusLost(null);

            BolterModelPreferencesRepository.getInstance().save(bolterModel);

            prefNode.putInt(FRAME_X_MARK, frameNormalX);
            prefNode.putInt(FRAME_Y_MARK, frameNormalY);
            prefNode.putInt(FRAME_WIDTH_MARK, frameNormalWidth);
            prefNode.putInt(FRAME_HEIGHT_MARK, frameNormalHeight);
            prefNode.putInt(FRAME_EXTENDED_STATE_MARK, getExtendedState());

            System.exit(0);
        }
    }//GEN-LAST:event_jMenuFileItemExitActionPerformed

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        if ((getExtendedState() & MAXIMIZED_HORIZ) != MAXIMIZED_HORIZ) {
            frameNormalX = getX();
        }

        if ((getExtendedState() & MAXIMIZED_VERT) != MAXIMIZED_VERT) {
            frameNormalY = getY();
        }
    }//GEN-LAST:event_formComponentMoved

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        if ((getExtendedState() & MAXIMIZED_HORIZ) != MAXIMIZED_HORIZ) {
            frameNormalWidth = getWidth();
        }

        if ((getExtendedState() & MAXIMIZED_VERT) != MAXIMIZED_VERT) {
            frameNormalHeight = getHeight();
        }
    }//GEN-LAST:event_formComponentResized

    private void jMenuHelpItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuHelpItemAboutActionPerformed
        aboutDialog.setLocation(calcMiddleCoord(getX(), getWidth(), aboutDialog.getWidth()), calcMiddleCoord(getY(), getHeight(), aboutDialog.getHeight()));
        aboutDialog.setVisible(true);
    }//GEN-LAST:event_jMenuHelpItemAboutActionPerformed

    private void setEnabledAddAtSitesButton() {
        jButtonAddAtSite.setEnabled(!jTextFieldLastAtSite.getText().isEmpty());
    }

    private void setEnabledDelAtSitesButtons() {
        jButtonDelAllAtSites.setEnabled(!((DefaultListModel<String>) jListAtSites.getModel()).isEmpty());
        jButtonDelAtSite.setEnabled(!jListAtSites.getSelectedValuesList().isEmpty());
    }

    private void setEnabledDelDateFromButton() {
        jButtonDelDateFrom.setEnabled(!jFormattedTextFieldDateFrom.getText().isEmpty());
        jButtonDelDates.setEnabled(!jFormattedTextFieldDateFrom.getText().isEmpty() || !jFormattedTextFieldDateTo.getText().isEmpty());
    }

    private void setEnabledDelDateToButton() {
        jButtonDelDateTo.setEnabled(!jFormattedTextFieldDateTo.getText().isEmpty());
        jButtonDelDates.setEnabled(!jFormattedTextFieldDateFrom.getText().isEmpty() || !jFormattedTextFieldDateTo.getText().isEmpty());
    }
    
    static private int calcMiddleCoord(int startCoord, int parentCoord, int ancestorCoord) {
        return startCoord + (parentCoord - ancestorCoord) / 2;
    }

    private class BolterFocusTraversalPolicy extends FocusTraversalPolicy {

        public BolterFocusTraversalPolicy() {
            focusOrder.add(jTextFieldSearch);
            focusOrder.add(jTextFieldLastAtSite);
            focusOrder.add(jButtonAddAtSite);
            focusOrder.add(jButtonDelAtSite);
            focusOrder.add(jButtonDelAllAtSites);
            focusOrder.add(jListAtSites);
            focusOrder.add(jFormattedTextFieldDateFrom);
            focusOrder.add(jButtonDelDateFrom);
            focusOrder.add(jFormattedTextFieldDateTo);
            focusOrder.add(jButtonDelDateTo);
            focusOrder.add(jButtonDelDates);
            focusOrder.add(jListWebSearchEngineWrappers);
            focusOrder.add(jButtonSearch);
        }

        @Override
        public Component getComponentAfter(Container aContainer, Component aComponent) {
            Component componentAfter = focusOrder.get((focusOrder.indexOf(aComponent) + 1) % focusOrder.size());

            if (!canBeFocusOwner(componentAfter)) {
                componentAfter = getComponentAfter(aContainer, componentAfter);
            }

            return componentAfter;
        }

        @Override
        public Component getComponentBefore(Container aContainer, Component aComponent) {
            int idx = focusOrder.indexOf(aComponent) - 1;
            if (idx < 0) {
                idx = focusOrder.size() - 1;
            }

            Component componentBefore = focusOrder.get(idx);

            if (!canBeFocusOwner(componentBefore)) {
                componentBefore = getComponentBefore(aContainer, componentBefore);
            }

            return componentBefore;
        }

        @Override
        public Component getFirstComponent(Container aContainer) {
            Component firstComponent = null;

            for (int idx = 0; idx < focusOrder.size(); idx++) {
                Component aComponent = focusOrder.get(idx);
                if (canBeFocusOwner(aComponent)) {
                    firstComponent = aComponent;
                    break;
                }
            }

            return firstComponent;
        }

        @Override
        public Component getLastComponent(Container aContainer) {
            Component lastComponent = null;

            for (int idx = focusOrder.size() - 1; idx >= 0; idx--) {
                Component aComponent = focusOrder.get(idx);
                if (canBeFocusOwner(aComponent)) {
                    lastComponent = aComponent;
                    break;
                }
            }

            return lastComponent;
        }

        @Override
        public Component getDefaultComponent(Container aContainer) {
            return getFirstComponent(aContainer);
        }

        private boolean canBeFocusOwner(Component aComponent) {
            if (aComponent.isEnabled() && aComponent.isDisplayable() && aComponent.isVisible() && aComponent.isFocusable()) {
                if (aComponent instanceof javax.swing.JList) {
                    if (((javax.swing.JList) aComponent).getModel().getSize() > 0) {
                        return true;
                    }

                    return false;
                }

                return true;
            }

            return false;
        }

        private final ArrayList<Component> focusOrder = new ArrayList<>();
    }

    private AboutDialog aboutDialog;
    private Preferences prefNode;
    private BolterModel bolterModel;
    private boolean isInitValuesMode;

    private int frameNormalX;
    private int frameNormalY;
    private int frameNormalWidth;
    private int frameNormalHeight;

    static final private String FRAME_X_MARK = "frame_x";
    static final private String FRAME_Y_MARK = "frame_y";
    static final private String FRAME_WIDTH_MARK = "frame_width";
    static final private String FRAME_HEIGHT_MARK = "frame_height";
    static final private String FRAME_EXTENDED_STATE_MARK = "frame_extended_state";

    static final private SimpleDateFormat SEARCH_DATE_FORMAT = new SimpleDateFormat("dd.MM.yyyy");

    static final private String NEXT_LINE_SMB = "\n";

    static final private String SEARCH_UNAVAILABLE_TITLE = "Поиск невозможен!";
    static final private String SEARCH_UNAVAILABLE_MESSAGE = "Пожалуйста, введите данные для поиска!";

    static final private String DEL_AT_SITES_TITLE = "Удалить следующие записи поиска по сайтам?";
    static final private String DEL_AT_SITES_MESSAGE = "Вы уверены удалить следующие записи поиска по сайтам?" + NEXT_LINE_SMB + NEXT_LINE_SMB;

    static final private String DEL_ALL_AT_SITES_TITLE = "Удалить все записи поиска по сайтам?";
    static final private String DEL_ALL_AT_SITES_MESSAGE = "Вы уверены удалить все записи поиска по сайтам?";

    static final private String DEL_DATES_TITLE = "Очистить данные поиска по периоду?";
    static final private String DEL_DATES_MESSAGE = "Вы уверены очистить данные поиска по периоду?";

    static final private String DEL_EXIT_TITLE = "Выйти?";
    static final private String DEL_EXIT_MESSAGE = "Вы уверены, что хотите выйти из программы?";

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddAtSite;
    private javax.swing.JButton jButtonDelAllAtSites;
    private javax.swing.JButton jButtonDelAtSite;
    private javax.swing.JButton jButtonDelDateFrom;
    private javax.swing.JButton jButtonDelDateTo;
    private javax.swing.JButton jButtonDelDates;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JFormattedTextField jFormattedTextFieldDateFrom;
    private javax.swing.JFormattedTextField jFormattedTextFieldDateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelApp;
    private javax.swing.JLabel jLabelDateFrom;
    private javax.swing.JLabel jLabelDateTo;
    private javax.swing.JList<String> jListAtSites;
    private javax.swing.JList<AWebSearchEngineWrapper> jListWebSearchEngineWrappers;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuFileItemExit;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuHelpItemAbout;
    private javax.swing.JPanel jPanelSearchFilter;
    private javax.swing.JPanel jPanelSearchFilterDate;
    private javax.swing.JPanel jPanelSearchFilterEngine;
    private javax.swing.JPanel jPanelSearchFilterSites;
    private javax.swing.JScrollPane jScrollPaneListAtSites;
    private javax.swing.JScrollPane jScrollPaneWebSearchEngineWrappers;
    private javax.swing.JTextField jTextFieldLastAtSite;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
